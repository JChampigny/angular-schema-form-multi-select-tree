!function(e,t){"function"==typeof define&&define.amd?define(["angular-schema-form"],t):"object"==typeof exports?module.exports=t(require("angular-schema-form")):e.angularSchemaFormMultiSelectTree=t(e.schemaForm)}(this,function(e){return angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/tree-select/tree-item.tpl.html",'<div class="tree-child-node">\r\n    <div class="item-container" ng-class="{active: item.isActive, selected: item.selected}" ng-click="clickSelectItem(item)" ng-mouseover="onMouseOver(item)">\r\n           <span ng-if="showExpand(item)" class="expand" ng-class="{\'expand-opened\': item.isExpanded}" ng-click="onExpandClicked(item)"></span>\r\n        <div class="item-details">\r\n            <input class="tree-checkbox" type="checkbox" ng-if="showCheckbox()" ng-checked="item.selected">\r\n            {{item.name}}\r\n        </div>\r\n    </div>\r\n    <div class="tree-parent-node" ng-repeat="child in item.children" ng-if="item.isExpanded">\r\n        <gm-tree-item item="child" item-clicked="subItemClicked(item)" can-select-item="canSelectItem" multi-select="multiSelect" on-active-item="activeSubItem(item)"></gm-tree-item>\r\n    </div>\r\n</div>'),e.put("directives/decorators/bootstrap/tree-select/tree-select.html",'<div class="form-group {{form.htmlClass}}" ng-controller="multiSelectTreeController">\r\n    <div class="row" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}">\r\n        <label class="control-label col-sm-2 {{form.labelHtmlClass}}" ng-show="showTitle()">\r\n            {{form.title}}\r\n        </label>\r\n        <div class="tree-control col-sm-10">\r\n            <div class="col-sm-7 {{form.fieldHtmlClass}}">\r\n                <button gm-multi-select-tree type="button" ng-click="onControlClicked()" class="btn btn-select form-control" ng-disabled="form.readonly" data-placeholder="form.placeholder" ng-model="$$value$$" sf-changed="form" schema-validate="form" ng-model-options="form.ngModelOptions" data-multi-select="form.options.multiple" ng-init="populateTitleMap(form)" name="{{form.key.slice(-1)[0]}}">\r\n                    <i class="fa fa-spinner fa-spin fa-fw" ng-if="loading"></i> {{showDropdownLabel()}}\r\n                    <span class="caret"></span>\r\n                </button>\r\n            </div>\r\n            <div class="tree-view" ng-if="showTree">\r\n                <div class="border-bottom padding-top">\r\n                    <div class="line">\r\n                        <div class="tree-form-group">\r\n                            <div class="row">\r\n                                <div class="col-md-6">\r\n                                    <div class="btn-group">\r\n                                        <a class="btn btn-original btn-default active" ng-click="showAll($event)">Show\r\n                                            All</a>\r\n                                        <a class="btn btn-original btn-default" ng-click="showSelected($event)">Selected</a>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-6 text-right" ng-if="totalNumberItems">\r\n                                    <span>{{totalNumberItems}} Item{{{true:"s", false:""}[totalNumberItems > 1]}} | {{{true: totalNumberItems, false: selectedItems.length}[allSelected]}} Selected</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="tree-form-group">\r\n                            <div class="row">\r\n                                <div class="col-md-12">\r\n                                    <div class="input-group">\r\n                                        <input placeholder="Search..." type="text" ng-model="pagination.query" ng-change="queryChanged()" class="form-control form-control-original" ng-model-options="{debounce: 750}">\r\n                                        <span class="input-group-btn" ng-click="clearFilter()">\r\n                                                       <button class="btn btn-original btn-default close" type="button" aria-label="Close"><span aria-hidden="true">&times;</span></button>\r\n                                                   </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="tree-form-group">\r\n                            <div class="row">\r\n                                <div class="col-md-12">\r\n                                    <div class="btn-group" ng-if="form.options.multiple">\r\n                                        <a class="btn btn-original btn-default" ng-click="selectAll()">Select All</a>\r\n                                        <a class="btn btn-original btn-default" ng-click="selectNone()">None</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="tree-container">\r\n                    <div class="tree-parent-node" infinite-scroll="nextPage()" infinite-scroll-disabled="busy" infinite-scroll-container="\'.tree-container\'">\r\n                        <gm-tree-item class="top-level" ng-repeat="item in form.titleMap" item="item" ng-show="!item.isFiltered" can-select-item="canSelectItem" multi-select="form.options.multiple" item-clicked="itemClicked(item)" on-active-item="onActiveItem(item)" select-only-leafs="selectOnlyLeafs">\r\n                        </gm-tree-item>\r\n                        <div style="clear: both"></div>\r\n                        <div class="tree-child-node" ng-if="form.titleMap.length === 0 && !loading">No data available\r\n                        </div>\r\n                        <div class="tree-child-node alert alert-danger" ng-if="error">\r\n                            <i class="glyphicon glyphicon-exclamation-sign"></i> Something went wrong\r\n                        </div>\r\n                        <div class="tree-child-node" ng-if="!form.titleMap && loading">\r\n                            <i class="fa fa-spinner fa-spin fa-fw"></i> Loading data...\r\n                        </div>\r\n                        <div class="tree-child-node" ng-if="totalNumberItems > form.titleMap.length && busy && !showSelectedOnly" ng-click="nextPage()">\r\n                            <i class="fa fa-spinner fa-spin fa-fw"></i> Loading more data... ({{totalNumberItems}}\r\n                            total)\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="tree-form-group border-top padding-top">\r\n                    <div class="row text-right">\r\n                        <div class="col-md-12">\r\n                            <a class="btn btn-original btn-default" ng-click="cancel()">Cancel</a>\r\n                            <a class="btn btn-original btn-default" ng-click="done()">Done</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="tooltip-mark col-sm-1">\r\n                           <span ng-if="form.tooltip.content != null && form.tooltip.content != \'\'" class="glyphicon glyphicon-question-sign clickable" ng-attr-tooltip-trigger="outsideClick" ng-attr-tooltip-placement="{{form.tooltip.position}}" ng-attr-uib-tooltip="{{form.tooltip.content}}"></span>\r\n            </div>\r\n            <div class="help-block col-sm-3" sf-message="form.description"></div>\r\n            <div class="col-sm-1">\r\n                           <span ng-if="form.feedback !== false" class="form-control-feedback" ng-class="evalInScope(form.feedback) || {\'glyphicon\': true, \'glyphicon-ok\': hasSuccess(), \'glyphicon-remove\': hasError() }"></span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>')}]),function(e,t){"function"==typeof define&&define.amd?define(["angular-schema-form"],t):"object"==typeof exports?module.exports=t(require("angular-schema-form")):e.angularSchemaFormMultiSelectTree=t(e.schemaForm)}(this,function(e){angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/tree-select/tree-select.html",'<div class="form-group {{form.htmlClass}}" ng-controller="multiSelectTreeController">   <div class="row" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess()}">       <label class="control-label col-sm-2 {{form.labelHtmlClass}}" ng-show="showTitle()">           {{form.title}}       </label>       <div class="tree-control col-sm-10">           <div class="col-sm-7 {{form.fieldHtmlClass}}">               <button gm-multi-select-tree type="button" ng-click="onControlClicked()" class="btn btn-select form-control" ng-disabled="form.readonly"                       data-placeholder="form.placeholder" ng-model="$$value$$" sf-changed="form" schema-validate="form" ng-model-options="form.ngModelOptions"                       data-multi-select="form.options.multiple" ng-init="populateTitleMap(form)" name="{{form.key.slice(-1)[0]}}">                   <i class="fa fa-spinner fa-spin fa-fw" ng-if="loading"></i> {{showDropdownLabel()}}                   <span class="caret"></span>               </button>           </div>           <div class="tree-view" ng-if="showTree">               <div class="border-bottom padding-top">                   <div class="line">                       <div class="tree-form-group">                           <div class="row">                               <div class="col-md-6">                                   <div class="btn-group">                                       <a class="btn btn-original btn-default active" ng-click="showAll($event)">Show All</a>                                       <a class="btn btn-original btn-default" ng-click="showSelected($event)">Selected</a>                                   </div>                               </div>                               <div class="col-md-6 text-right" ng-if="totalNumberItems">                                   <span>{{totalNumberItems}} Item{{{true:"s", false:""}[totalNumberItems > 1]}} | {{{true: totalNumberItems, false: selectedItems.length}[allSelected]}} Selected</span>                               </div>                           </div>                       </div>                       <div class="tree-form-group">                           <div class="row">                               <div class="col-md-12">                                   <div class="input-group">                                       <input placeholder="Search..." type="text" ng-model="pagination.query"                                              ng-change="queryChanged()" class="form-control form-control-original" ng-model-options="{debounce: 750}">                                       <span class="input-group-btn" ng-click="clearFilter()">                                           <button class="btn btn-original btn-default close" type="button" aria-label="Close"><span aria-hidden="true">&times;</span></button>                                       </span>                                   </div>                               </div>                           </div>                       </div>                       <div class="tree-form-group">                           <div class="row">                               <div class="col-md-12">                                   <div class="btn-group" ng-if="form.options.multiple">                                       <a class="btn btn-original btn-default" ng-click="selectAll()">Select All</a>                                       <a class="btn btn-original btn-default" ng-click="selectNone()">None</a>                                   </div>                               </div>                           </div>                       </div>                   </div>               </div>               <div class="tree-container">                   <div class="tree-parent-node"                         infinite-scroll="nextPage()"                        infinite-scroll-disabled="busy"                        infinite-scroll-container="\'.tree-container\'">                       <gm-tree-item class="top-level" ng-repeat="item in form.titleMap" item="item" ng-show="!item.isFiltered"                                     can-select-item="canSelectItem" multi-select="form.options.multiple" item-clicked="itemClicked(item)"                                     on-active-item="onActiveItem(item)" select-only-leafs="selectOnlyLeafs">                       </gm-tree-item>                       <div style="clear: both;"></div>                       <div class="tree-child-node" ng-if="form.titleMap.length === 0 && !loading">No data available</div>                       <div class="tree-child-node alert alert-danger" ng-if="error">                           <i class="glyphicon glyphicon-exclamation-sign"></i> Something went wrong                       </div>                       <div class="tree-child-node" ng-if="!form.titleMap && loading">                           <i class="fa fa-spinner fa-spin fa-fw"></i> Loading data...                       </div>                       <div class="tree-child-node" ng-if="totalNumberItems > form.titleMap.length && busy && !showSelectedOnly" ng-click="nextPage()">                           <i class="fa fa-spinner fa-spin fa-fw"></i> Loading more data... ({{totalNumberItems}} total)                       </div>                   </div>               </div>               <div class="tree-form-group border-top padding-top">                   <div class="row text-right">                       <div class="col-md-12">                           <a class="btn btn-original btn-default" ng-click="cancel()">Cancel</a>                           <a class="btn btn-original btn-default" ng-click="done()">Done</a>                       </div>                   </div>               </div>           </div>           <div class="tooltip-mark col-sm-1">               <span ng-if="form.tooltip.content != null && form.tooltip.content != \'\'" class="glyphicon glyphicon-question-sign clickable"                     ng-attr-tooltip-trigger="outsideClick" ng-attr-tooltip-placement="{{form.tooltip.position}}" ng-attr-uib-tooltip="{{form.tooltip.content}}"></span>           </div>           <div class="help-block col-sm-3" sf-message="form.description"></div>           <div class="col-sm-1">               <span ng-if="form.feedback !== false" class="form-control-feedback"'+"                     ng-class=\"evalInScope(form.feedback) || {'glyphicon': true, 'glyphicon-ok': hasSuccess(), 'glyphicon-remove': hasError() }\"></span>           </div>       </div>   </div></div>"),e.put("directives/decorators/tree-select/tree-item.tpl.html",'<div class="tree-child-node">   <div class="item-container" ng-class="{active: item.isActive, selected: item.selected}"        ng-click="clickSelectItem(item)" ng-mouseover="onMouseOver(item)">       <span ng-if="showExpand(item)" class="expand" ng-class="{\'expand-opened\': item.isExpanded}"             ng-click="onExpandClicked(item)"></span>       <div class="item-details">           <input class="tree-checkbox" type="checkbox" ng-if="showCheckbox()"                  ng-checked="item.selected"/>{{item.name}}       </div>   </div>   <div class="tree-parent-node" ng-repeat="child in item.children" ng-if="item.isExpanded">       <gm-tree-item item="child" item-clicked="subItemClicked(item)"                     can-select-item="canSelectItem" multi-select="multiSelect"                     on-active-item="activeSubItem(item)"></gm-tree-item>    </div></div>')}]),angular.module("schemaForm").controller("multiSelectTreeController",["$rootScope","$scope","$http",function(e,t,n){function l(){return t.model&&t.model.hasOwnProperty(t.form.key)?t.model[t.form.key].map(function(e){return{value:e}}):[]}function i(t,n){t.options.hasOwnProperty("registerEvents")&&t.options.registerEvents&&t.options.registerEvents.forEach(function(t){console.log("Register event with name: "+t),e.$broadcast(t,n)})}function o(e){if(e=e||t.form,t.listenEventsArgs.length===e.options.listenEvents.length&&t.model)return t.loading=!0,t.getCallback(e.options.asyncCallback)(t.listenEventsArgs,{pageIndex:t.pagination.pageIndex,maxItems:t.pagination.maxItems,query:t.pagination.query}).then(function(n){t.totalNumberItems=n.data.totalNumber,t.pagination.pageIndex=n.data.pageIndex,t.finalizeTitleMap(e,n.data.results,e.options),t.busy=!1,t.loading=!1},function(e){console.log("Loading select items failed \nError: "+JSON.stringify(e)),t.loading=!1,t.error=!0})}function a(){return t.selectedItems&&1===t.selectedItems.length&&"0"===t.selectedItems[0].value}function s(e){if(t.allSelected||t.selectOnlyLeafs&&e.children&&e.children.length>0&&e.selected)return!0;var n=!1;if(t.selectedItems)for(var l=0;l<t.selectedItems.length;l++)if(t.selectedItems[l].value===e.value){n=!0;break}return n}function r(e){if(!t.model[t.form.key])return!1;if(1===t.selectedItems.length&&"0"===t.selectedItems[0])return!0;for(var n in t.selectedItems)if(t.selectedItems[n].hasOwnProperty("value")&&e.value===t.selectedItems[n].value)return t.selectedItems[n]=e,!0;return!1}function c(e,n){n&&(t.selectedItems=l()),t.allSelected=a();for(var i=0,o=e.length;i<o;i++)r(e[i])?e[i].selected=!0:s(e[i])||e[i].selected!==!0?!s(e[i])||e[i].hasOwnProperty("selected")&&e[i].selected!==!1||(e[i].selected=!0):t.selectedItems.push(e[i]),e[i]&&e[i].children&&c(e[i].children)}function d(){t.showTree=!1,t.showAll(),u&&(u.isActive=!1,u=void 0)}function m(e,t,n){for(var l=0,i=e.length;l<i;l++)if(e[l][n]===t)return l;return-1}function p(e,t){return{children:[],id:e,value:e,isActive:!0,isExpanded:!1,name:t,selected:!0}}var u;t.allSelected=!1,t.showTree=!1,t.showSelectedOnly=!1,t.selectedItems=l(),t.previousItems=[],t.previousTitleMap=[],t.allItems=[],t.busy=!1,t.loading=!1,t.isQueried=!1,t.multiSelect=t.form.options.multiple||!1,t.selectOnlyLeafs=t.form.selectOnlyLeafs||!1,t.form.options=t.form.options||{},t.form.options.scope=t,t.pagination={pageIndex:0,maxItems:t.form.maxItems||20,query:""},t.getCallback=function(e){if("string"==typeof e){var n=t.$parent.evalExpr(e);if("function"==typeof n)return n;throw"A callback string must match name of a function in the parent scope"}if("function"==typeof e)return e;throw"A callback must either be a string matching the name of a function in the parent scope or a direct function reference"},t.populateTitleMap=function(e,l){if(e=e||t.form,t.busy=!0,e.options)if(e.options.callback)if(t.awaiting=!0,e.options.listenEvents){if(!e.options&&!e.options.callback)throw"No Callback was found in the options attribute";t.listenEventsArgs=[],e.options.listenEvents.forEach(function(n){t.$on(n.name,function(i,o){var a=!1;t.error=!1,t.listenEventsArgs.forEach(function(e){e.name===n.argName&&(e.value=o,a=!0)}),t.listenEventsArgs.length===e.options.listenEvents.length||a||t.listenEventsArgs.push({name:n.argName,value:o}),t.listenEventsArgs.length===e.options.listenEvents.length&&(t.loading=!0,e.titleMap=t.getCallback(e.options.callback)(t.listenEventsArgs,l),t.finalizeTitleMap(e,e.titleMap,e.options)),t.busy=!1})})}else t.loading=!0,e.titleMap=t.getCallback(e.options.callback)(e.options,l),t.finalizeTitleMap(e,e.titleMap,e.options),t.busy=!1;else if(e.options.asyncCallback){if(t.awaiting=!0,!e.options.listenEvents)return t.loading=!0,t.getCallback(e.options.asyncCallback)(e.options,{pageIndex:t.pagination.pageIndex,maxItems:t.pagination.maxItems,query:t.pagination.query}).then(function(n){t.totalNumberItems=n.data.totalNumber,t.pagination.pageIndex=n.data.pageIndex,t.finalizeTitleMap(e,n.data.results,e.options),t.ngModel.$modelValue&&i(e,t.ngModel.$modelValue),t.busy=!1},function(e){alert("Loading select items failed \nError: "+JSON.stringify(e))});if(!e.options&&!e.options.asyncCallback)throw"No Callback was found in the options attribute";t.listenEventsArgs=[],e.readonly=!0,e.options.listenEvents.forEach(function(n){t.$on(n.name,function(l,a){if(a){var s=!1;t.listenEventsArgs.forEach(function(e){e.name===n.argName&&(e.value=a,s=!0)}),t.listenEventsArgs.length===e.options.listenEvents.length||s||t.listenEventsArgs.push({name:n.argName,value:a})}if(a!==!1)a&&t.listenEventsArgs.length!==e.options.listenEvents.length||(o(e),e.readonly=!1);else for(var r in t.listenEventsArgs)t.listenEventsArgs[r].name===n.argName&&(t.listenEventsArgs.splice(r,1),e.titleMap=null,e.readonly=!0,delete t.model[e.key],t.selectedItems=[],i(e,!1))});var l=t.model;null!=l&&l[n.name]&&t.$emit(n.name,l[n.name])})}else{if(e.options.httpPost){var a=t.getOptions(e.options,l);return n.post(a.httpPost.url,a.httpPost.parameter).then(function(n){t.finalizeTitleMap(e,n.data,a),console.log("httpPost items",e.titleMap),t.busy=!1},function(e,t){alert("Loading select items failed (URL: '"+String(a.httpPost.url)+"' Parameter: "+String(a.httpPost.parameter)+"\nError: "+t)})}if(e.options.httpGet){var s=t.getOptions(e.options,l);return n.get(s.httpGet.url,s.httpGet.parameter).then(function(n){t.finalizeTitleMap(e,n.data,s),console.log("httpGet items",e.titleMap),t.busy=!1},function(e,t){alert("Loading select items failed (URL: '"+String(s.httpGet.url)+"\nError: "+t)})}e.titleMap.length>0&&(t.allItems=angular.copy(e.titleMap),t.busy=!1)}else console.log("multiSelectTreeController.populateTitleMap(key:"+e.key+") : No options set, needed for dynamic tree select")},t.finalizeTitleMap=function(e,n,l){var i=t.isQueried||!e.titleMap||!t.busy;if(e.titleMap=i?[]:e.titleMap,l&&"map"in l&&l.map){var o=l.map.nameProperty.length-1,a=l.map.separatorValue?l.map.separatorValue:" - ";n.forEach(function(t){if(t.value=t[l.map.valueProperty],"string"!=typeof l.map.nameProperty){var n="";for(var i in l.map.nameProperty)n+=t[l.map.nameProperty[i]],parseInt(i)!==o&&(n+=a);t.name=n}else t.name=t[l.map.nameProperty];e.titleMap.push(t)})}else n.forEach(function(e){"text"in e&&(e.name=e.text)}),e.titleMap=n;t.allItems=angular.copy(e.titleMap),t.isQueried?(c(e.titleMap),t.isQueried=!1):c(e.titleMap,i),t.refreshOutputModel()},t.findInTitleMap=function(e){for(var n=0;n<t.form.titleMap.length;n++)if(t.form.titleMap[n].value===e)return{value:t.form.titleMap[n].value,name:t.form.titleMap[n].name}},t.nextPage=function(){t.busy||(t.pagination.pageIndex+1)*t.pagination.maxItems>t.totalNumberItems||(t.busy=!0,t.pagination.pageIndex=t.pagination.pageIndex+1,o())},t.docClickHide=function(){t.done(),d(),t.$apply()},t.onActiveItem=function(e){u!==e&&(u&&(u.isActive=!1),u=e,u.isActive=!0)},t.refreshOutputModel=function(){t.outputModel=angular.copy(t.selectedItems),c(t.form.titleMap)},t.showDropdownLabel=function(){return t.loading?"Loading Data...":0===t.selectedItems.length?t.form.placeholder:t.allSelected?t.totalNumberItems+" items selected":t.selectedItems.length+" items selected"},t.refreshSelectedItems=function(){t.form.titleMap&&c(t.form.titleMap,!0)},t.deselectItem=function(e){t.selectedItems.splice(t.selectedItems.indexOf(e),1),e.selected=!1,this.refreshOutputModel()},t.onControlClicked=function(){t.showTree=!t.showTree,t.previousItems=angular.copy(t.selectedItems),t.previousTitleMap=angular.copy(t.form.titleMap)},t.queryChanged=function(){t.pagination.pageIndex=0,t.isQueried=!0,o()},t.clearFilter=function(){t.pagination.query="",t.queryChanged()},t.canSelectItem=function(e){return t.callback({item:e,selectedItems:t.selectedItems})},t.switchCurrentView=function(){t.switchViewCallback({scopeObj:t})};var f=function(e,t,n){n=n||[];for(var l in e)e[l].hasOwnProperty(t)&&e[l][t].length>0?n.join(f(e[l][t],t,n)):n.push(e[l]);return n};t.itemClicked=function(e){if(console.log(t.model),!t.useCallback||t.canSelectItem(e)!==!1){if(t.allSelected&&(t.allSelected=!1,t.selectOnlyLeafs&&(t.selectedItems=f(t.form.titleMap,"children"))),t.multiSelect){t.selectOnlyLeafs&&e.children&&0!==e.children.length||(e.selected=!0);var n=m(t.selectedItems,e.value,"value");if(s(e)){e.selected=!1,t.selectOnlyLeafs&&e.children&&0!==e.children.length||t.selectedItems.splice(n,1);for(var l in e.children)t.itemClicked(e.children[l])}else{t.selectOnlyLeafs&&e.children&&0!==e.children.length||t.selectedItems.push(e);for(var l in e.children)t.itemClicked(e.children[l])}}else{d();for(var l=0;l<t.selectedItems.length;l++)t.selectedItems[l].selected=!1;e.selected=!0,t.selectedItems=[e]}this.refreshOutputModel()}};var g=function(e,t,n,l){for(var i in e)e[i][n]=l,e[i].hasOwnProperty(t)&&e[i][t].length>0&&g(e[i].children,t,n,l)};t.selectAll=function(){t.multiSelect&&(t.outputModel=t.form.titleMap,g(t.outputModel,"children","selected",!0),t.selectedItems=[p("0","All")],t.allSelected=!0)},t.selectNone=function(){t.useCallback||(t.outputModel=t.form.titleMap,g(t.outputModel,"children","selected",!1),t.selectedItems=[],t.allSelected=!1,this.refreshOutputModel())},t.showAll=function(e){t.showSelectedOnly=!1,t.form.titleMap=angular.copy(t.allItems),e&&($(e.target).addClass("active"),$(e.target).siblings().removeClass("active")),this.refreshOutputModel()},t.showSelected=function(e){t.showSelectedOnly=!0,$(e.target).addClass("active"),$(e.target).siblings().removeClass("active"),a()||(t.form.titleMap=t.selectedItems.hasOwnProperty("name")?angular.copy(t.selectedItems):t.selectedItems.map(function(e){return p(e.value,e.value)}))},t.done=function(){var e=angular.copy(t.selectedItems.map(function(e){return e.value}));e.length>0&&!angular.equals(t.model[t.form.key],e)&&t.form.options?(t.model[t.form.key]=e,t.form.options.registerEvents&&i(t.form,t.model[t.form.key])):0===e.length&&(delete t.model[t.form.key],t.form.options.registerEvents&&i(t.form,!1)),d()},t.cancel=function(){t.allSelected=1===t.previousItems.length&&"0"===t.previousItems[0].value,t.allSelected?t.selectAll():(t.selectedItems=angular.copy(t.previousItems),t.form.titleMap=angular.copy(t.previousTitleMap)),d()},t.$watch("filterKeyword",function(){function e(t,n){if(!item.children)return null;for(var l=0;l<t.children.length;l++)n.push(t.children[l]),e(t.children[l],n);return n}function n(t,n){for(var l=e(t,[]),i=0,o=l.length;i<o;i++)if(l[i].name.toLowerCase().indexOf(n.toLowerCase())!==-1)return!1;return!0}void 0!==t.filterKeyword&&angular.forEach(t.form.titleMap,function(e){e.name.toLowerCase().indexOf(t.filterKeyword.toLowerCase())!==-1?e.isFiltered=!1:n(e,t.filterKeyword)?e.isFiltered=!0:e.isFiltered=!1})})}]),angular.module("schemaForm").controller("treeItemCtrl",["$scope",function(e){e.item.isExpanded=!1,e.showExpand=function(e){return e.children&&e.children.length>0},e.onExpandClicked=function(e){e.isExpanded=!e.isExpanded},e.clickSelectItem=function(t){e.itemClicked&&e.itemClicked({item:t})},e.subItemClicked=function(t){e.itemClicked&&e.itemClicked({item:t})},e.activeSubItem=function(t){e.onActiveItem&&e.onActiveItem({item:t})},e.onMouseOver=function(t){e.onActiveItem&&e.onActiveItem({item:t})},e.showCheckbox=function(){var t=!0;return e.multiSelect||(t=!1),e.selectOnlyLeafs&&(t=!0),e.useCallback&&(t=e.canSelectItem(e.item)),t}}]),angular.module("schemaForm").directive("gmMultiSelectTree",["$document","$window",function(e){return{restrict:"AE",require:"ngModel",scope:{ngModel:"=",gmMultiSelectTree:"=",selectOnlyLeafs:"=?"},link:function(t){function n(e){0===$(e.target).parents(".tree-control").length&&t.$parent.docClickHide()}t.$watch("$parent.showTree",function(t){t?e.on("click",n):e.off("click",n)}),t.$on("$destroy",function(){e.off("click",n)})}}}]),angular.module("schemaForm").directive("gmTreeItem",["$compile",function(e){return{restrict:"E",templateUrl:"directives/decorators/tree-select/tree-item.tpl.html",scope:{item:"=",itemClicked:"&",onActiveItem:"&",selectOnlyLeafs:"=?",isActive:"=",canSelectItem:"="},controller:"treeItemCtrl",compile:function(t,n,l){angular.isFunction(l)&&(l={post:l});var i,o=t.contents().remove();return{pre:l&&l.pre?l.pre:null,post:function(t,n,a){i||(i=e(o)),i(t,function(e){n.append(e)}),l&&l.post&&l.post.apply(null,arguments)}}}}}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(e,t,n){var l=function(t,l,i){if("array"===l.type&&"treeselect"===l.format){var o=e.stdFormObj(t,l,i);return o.key=i.path,o.type="treeselect",i.lookup[n.stringify(i.path)]=o,o}};e.defaults.array.unshift(l),t.defineAddOn("bootstrapDecorator","treeselect","directives/decorators/tree-select/tree-select.html")}])}),angularSchemaFormMultiSelectTree});